name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  high-level-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Code quality check
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Install and setup Ollama
        run: |
          # Install system dependencies
          sudo apt-get update
          sudo apt-get install -y curl
          
          # Install Ollama
          curl -fsSL https://ollama.ai/install.sh | sh

          # Start Ollama service in background
          ollama serve &

          # Wait for Ollama to be ready
          timeout 60 bash -c 'until curl -f http://localhost:11434/api/tags; do sleep 2; done'

          # Pull TinyLlama model
          ollama pull tinyllama

          # Verify model is available
          ollama list

      - name: Run core integration tests
        run: npm run test:e2e

      - name: Verify core functionality
        run: |
          echo "Testing core AI backend features..."
          # Start the application in background
          npm run start:prod &
          APP_PID=$!
          
          # Wait for server to be ready
          sleep 10
          
          # Test health endpoint
          curl -f http://localhost:3000/api/v1/health || exit 1
          
          # Test API status
          curl -f http://localhost:3000/api/v1/status || exit 1
          
          # Test basic text generation (Phase 1)
          curl -f -X POST http://localhost:3000/api/v1/generate \
            -H "Content-Type: application/json" \
            -d '{"prompt": "Test prompt"}' || echo "Generation test skipped (requires Ollama)"
          
          # Test ONNX classification (Phase 1)
          curl -f -X POST http://localhost:3000/api/v1/classify \
            -H "Content-Type: application/json" \
            -d '{"sepal_length": 5.1, "sepal_width": 3.5, "petal_length": 1.4, "petal_width": 0.2}' || echo "Classification test skipped (requires ONNX model)"
          
          # Test semantic caching (Phase 3)
          curl -f -X POST http://localhost:3000/api/v1/chat-semantic \
            -H "Content-Type: application/json" \
            -d '{"prompt": "What is AI?", "session_id": "test-session"}' || echo "Semantic chat test skipped (requires Ollama)"
          
          # Stop the application
          kill $APP_PID || true
          
          echo "Core functionality verification completed"
